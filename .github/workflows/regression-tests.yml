name: Regression Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  api_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]


    steps:
    - uses: actions/checkout@v3


    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r requirements.txt

        
    - name: Run API tests
      run: |
        chmod +x ./Backend/run.sh
        cd Backend && ./run.sh


    - name: Upload a API Tests Results
      uses: actions/upload-artifact@v3.1.3
      if: always()
      with: 
        name: api-reports
        path: Backend/logs


    - name: Test Reporter
      uses: dorny/test-reporter@v1.7.0
      with:
          name: API Test Result
          path: Backend/logs/xunit.xml
          reporter: java-junit


    - name: Robot Reporter
      uses: joonvena/robotframework-reporter-action@v2.3
      with:
          gh_access_token: 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
          path: Backend/logs


  web_tests:
    needs: api_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        
    steps:
    - uses: actions/checkout@v3


    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

        
    - name: Set up Node
      run: |
        curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-get install -y nodejs


    - name: Preparation
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb ca-certificates net-tools netcat gnupg ffmpeg libgtk-3-0 libgdk-pixbuf2.0-dev libxcomposite-dev libdbus-glib-1-2 libatk-bridge2.0-0 wget libgbm1 libnss3 libxss1 libasound2


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install -r requirements.txt


    - name: Run Browser Init
      run: rfbrowser init
  
                
    - name: Run WEB tests
      run: |
        chmod +x ./Frontend/run.sh
        cd Frontend && ./run.sh

        
    - name: Upload a WEB Tests Results
      uses: actions/upload-artifact@v3.1.3
      if: always()
      with: 
        name: web-reports
        path: Frontend/logs

        
    - name: Test Reporter
      uses: dorny/test-reporter@v1.7.0
      with:
          name: WEB Test Result
          path: Frontend/logs/xunit.xml
          reporter: java-junit
        
        
